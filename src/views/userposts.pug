extends layout.pug 

block content 
      div(class="container mx-auto p-6 my-24 w-3/6")
        h1(class="text-center text-slate-800 underline text-2xl ") "Explore Your Moments"
        if posts.length
           each post in posts
            .post 
              div(class="post border border-black rounded-lg p-2 mb-2")
                div(class="flex justify-between items-center mb-2")
                  div(class="flex items-center")
                    img(src=user.profilePicture alt="Profile Picture" class="w-12 h-12 rounded-full border-2 border-black mr-4")
                    div
                      div(class="font-bold") #{user.username}
                      div(class="text-sm text-gray-600") #{user.country}
                  -const formattedDate = new Date(post.createdAt).toLocaleDateString(undefined, {year: 'numeric',month: 'short',day: 'numeric',hour: '2-digit',minute: '2-digit',second: '2-digit'});        
                  div(class="text-gray-600 text-sm") #{formattedDate}
                div(class="mb-4") #{post.content}
                div(class="border-2 border-gray-200 rounded-2xl p-2 mb-4 flex justify-center items-center")
                    img(src=post.picture alt="Post Picture" class="w-max h-64")
                div(class="flex justify-between items-center")
                  div(class="flex items-center")
                    a(href="javascript:void(0)" class="flex items-center cursor-pointer like-btn" data-post-id=post._id)
                      img(src=post.likedByUser ? "/images/liked.png" : "/images/like.png", alt="like" class="w-12 h-12 cursor-pointer")
                    div(class="text-red-500") #{post.totalLikes}
                  div(class="flex items-center")
                      a(href="javascript:void(0)", class="flex items-center cursor-pointer delete-post" data-post-id=post.id)
                          img(src="/images/delte.png", alt="like" class="w-12 h-12 cursor-pointer")
                      div(class="text-blue-500") Delete Post
                  div(class="flex items-center")
                    img(src="/images/comment.png", alt="comment" class="w-12 h-12 cursor-pointer" id="commentbtn")
                    div(class="text-orange-900") 12
                div(class="mt-4 border-t border-gray-300 pt-4 hidden" id="commentform")
                  form(action=`/add-comment/${postId}` method="POST" class="flex items-center" id="commentForm")
                    input(type="text" name="comment" placeholder="Add a comment..." class="flex-grow border border-gray-300 rounded-md p-2 mr-4")
                    button(type="submit" class="bg-blue-500 text-white font-bold py-2 px-4 rounded") Post

        else
                h1 You have no posts yet.      

      script. 
          const deletepost = document.querySelectorAll('.delete-post')
            deletepost.forEach(button=>{
            button.addEventListener('click', async (event) => {
            const postId = event.target.closest('.delete-post').dataset.postId;
            try {
              const response = await fetch(`/wander/v1/users/delete-post/${postId}`, {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json',
                }
              });
              const result = await response.json();
                if (response.ok) {
                  console.log(result.message);
                  alert("Post Deleted Successfullyâœ–")
                  window.location.href = "/wander/v1/users/userposts";
                } else {
                  console.log(result.message);
                }
              } catch (err) {
                alert(err);
              }
            });
        })

        document.querySelectorAll('.like-btn').forEach(button => {
          button.addEventListener('click', async (e) => {
          e.preventDefault();
          const postId = button.getAttribute('data-post-id');

          try {
            const response = await fetch(`/wander/v1/like/${postId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json',
              },
              credentials: 'include'
            });

            const data = await response.json();

            if (response.ok) {
              const likeImg = button.querySelector('img');
              const likeCount = button.nextElementSibling;
              likeImg.src = data.data.islikeby ? "/images/liked.png" : "/images/like.png";
              likeCount.textContent = data.data.totalLikes;
            } else {
              console.error(data.message);
            }
          } catch (error) {
            console.error('Error:', error);
          }
          });
        });